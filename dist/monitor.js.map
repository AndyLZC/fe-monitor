{"version":3,"file":"monitor.js","sources":["../src/performance/fcp.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../src/utils/index.ts","../src/config/index.ts","../src/utils/report.ts","../src/types/index.ts","../src/performance/fps.ts","../src/performance/fsp.ts","../src/performance/cls.ts","../src/performance/fid.ts","../src/performance/lcp.ts","../src/behavior/breadcrumb.ts","../src/performance/fetch.ts","../src/performance/xhr.ts","../src/performance/index.ts","../src/behavior/pv.ts","../src/behavior/accessDuration.ts","../src/behavior/click.ts","../src/utils/pv.ts","../src/behavior/pageChange.ts","../src/behavior/index.ts","../node_modules/stackframe/stackframe.js","../node_modules/error-stack-parser/error-stack-parser.js","../src/error/index.ts","../src/index.ts"],"sourcesContent":["// first-contentful-paint 首次内容绘制时间\n\nimport { report } from '../utils/report'\nimport { MonitorType, PerformanceType } from '../types'\n\nexport function getFCP() {\n  const observer = new PerformanceObserver((list) => {\n    for (const entry of list.getEntries()) {\n      if (entry.name === 'first-contentful-paint') {\n        observer.disconnect()\n      }\n    }\n  })\n  observer.observe({ type: 'paint', buffered: true })\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { v4 as uuidv4 } from 'uuid'\n\nexport function on(\n  target: Window | HTMLElement,\n  event: string,\n  handler: EventListenerOrEventListenerObject,\n  capture: false\n) {\n  if (typeof target?.addEventListener === 'function') {\n    target.addEventListener(event, handler, capture)\n  }\n}\n\nexport function off(\n  target: Window | HTMLElement,\n  event: string,\n  handler: EventListenerOrEventListenerObject,\n  capture: false\n) {\n  if (typeof target?.removeEventListener === 'function') {\n    target.removeEventListener(event, handler, capture)\n  }\n}\n\nexport function interceptStr(str: string, interceptStrLength: number) {\n  return str.slice(0, interceptStrLength)\n}\n\nlet uuid = ''\nexport function getUUID() {\n  uuid = localStorage.getItem('uuid') || ''\n  if (uuid) {\n    return uuid\n  }\n\n  localStorage.setItem('uuid', uuidv4())\n}\n\nexport function httpStatusMap(httpStatus: number) {\n  if (httpStatus > 0 && httpStatus < 400) {\n    return 'OK'\n  }\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'Unauthenticated'\n      case 403:\n        return 'PermissionDenied'\n      case 404:\n        return 'NotFound'\n      case 409:\n        return 'AlreadyExists'\n      case 413:\n        return 'FailedPrecondition'\n      case 429:\n        return 'ResourceExhausted'\n      default:\n        return 'InvalidArgument'\n    }\n  }\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'Unimplemented'\n      case 503:\n        return 'Unavailable'\n      case 504:\n        return 'DeadlineExceeded'\n      default:\n        return 'InternalError'\n    }\n  }\n  return 'UnknownError'\n}\n","import type { Options } from '../types'\nimport { getUUID } from '../utils/index'\nconst VERSION = '1.0.0'\n\nconst config: Options = {\n  url: '', // 上报地址\n  userId: '', // 用户Id\n  appKey: '', // appkey\n  sdkVersion: VERSION, // 版本号\n  uuid: getUUID(),\n  domTracker: false // 是否追踪点击\n}\n\nexport function setConfig(options: Options) {\n  Object.assign(config, options)\n}\n\nexport default config\n","import type { ReportData } from '../types'\nimport defaultConfig from '../config'\n\nfunction reportMethod(url: string, body: string) {\n  if (navigator.sendBeacon) {\n    return navigator.sendBeacon(url, body)\n  }\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json; charset=utf-8'\n    },\n    body\n  })\n}\n\nexport function report(data: ReportData, immediate = false) {\n  const params = {\n    data: { ...defaultConfig, ...data, time: Date.now() }\n  }\n  console.log(params)\n  if (immediate) {\n    return reportMethod(defaultConfig.url, JSON.stringify(params))\n  }\n\n  window.requestIdleCallback(\n    () => {\n      reportMethod(defaultConfig.url, JSON.stringify(params))\n    },\n    { timeout: 1000 }\n  )\n}\n","export interface DefaultOptions {\n  url: string\n  uuid: string\n  userId: string\n  appKey: string\n  sdkVersion: string | number\n  domTracker: boolean\n  hashTracker: boolean\n  historyTracker: boolean\n}\n\n// url 必传\nexport interface Options extends Partial<DefaultOptions> {\n  url: string\n  userId: string\n  appKey: string\n}\n\nexport enum MonitorType {\n  Performance = 'performance',\n  Behavior = 'behavior',\n  Error = 'error'\n}\n\nexport enum PerformanceType {\n  PV = 'pv',\n  Load = 'load',\n  FPS = 'fps',\n  DomcontentLoaded = 'domcontentloaded',\n  FirstScreenPaint = 'first-screen-paint',\n  FirstContentfulPaint = 'first-contentful-paint',\n  FirstInputDelay = 'first-input-delay',\n  LargestContentfulPaint = 'largest-contentful-paint',\n  CumlativeLayoutShift = 'cumlative-layout-shift',\n  LongTask = 'long-task',\n  Fetch = 'fetch',\n  Xhr = 'xhr'\n}\n\nexport enum ErrorType {\n  Js = 'js_error',\n  Promise = 'promise_error',\n  Async = 'async_error',\n  Fetch = 'fetch_error',\n  Xhr = 'xhr_error',\n  Resource = 'resource_error'\n}\n\nexport enum BehaviorType {\n  pushState = 'pushState',\n  hashChange = 'hashChange',\n  pv = 'pv',\n  accessDuration = 'accessDuration',\n  click = 'click'\n}\n\nexport interface ReportData {\n  type: MonitorType\n  subType?: PerformanceType | ErrorType | BehaviorType\n  [key: string]: any\n}\n\nexport interface xhrOption {\n  startTime: number\n  url: RequestInfo | URL\n  method: string\n  subType: string\n  type: string\n  endTime?: number\n  status?: number\n  success?: boolean\n  duration?: number\n}\n\nexport enum BreadCrumbType {\n  HTTP = 'Http',\n  Click = 'Click',\n  RESOURCE = 'Resource_Error',\n  CODEERROR = 'Code_Error',\n  ROUTE = 'Route'\n}\n\nexport interface IBreadCrumb {\n  breadCrumbType: BreadCrumbType\n  breadCrumbStatus: 'success' | 'error' | 'info'\n  data: unknown\n  time: number\n  type: MonitorType\n}\n\nexport interface VueInstance {\n  config?: VueConfiguration\n  mixin(hooks: { [key: string]: () => void }): void\n  util: {\n    warn(...input: any): void\n  }\n  version: string\n}\nexport interface VueConfiguration {\n  silent: boolean\n  errorHandler(err: Error, vm: ViewModel, info: string): void\n  warnHandler(msg: string, vm: ViewModel, trace: string): void\n  ignoredElements: (string | RegExp)[]\n  keyCodes: { [key: string]: number | number[] }\n  async: boolean\n}\n\nexport interface ViewModel {\n  [key: string]: any\n  $root: Record<string, unknown>\n  $options: {\n    [key: string]: any\n    name?: string\n    // vue2.6\n    propsData?: Record<string, unknown>\n    _componentTag?: string\n    __file?: string\n    props?: Record<string, unknown>\n  }\n  $props: Record<string, unknown>\n}\n","// frame-per-second 每秒刷新频率\n\nimport { report } from '../utils/report'\nimport { MonitorType, PerformanceType } from '../types'\n\ntype FramesType = number[]\nconst frames: FramesType = []\nconst BLOCKING_FRAME = 20\nconst LAST = 3\n\nexport function getFps() {\n  let frame = 0\n  let lastTime = Date.now()\n  function calculateFrame() {\n    const now = Date.now()\n    frame = frame + 1\n\n    // 计算 1s 内帧频率\n    if (lastTime + 1000 <= now) {\n      const fps = Math.round(frame / (now - lastTime) / 1000)\n      frames.push(fps)\n\n      frame = 0\n      lastTime = now\n    }\n\n    // 1 分钟上报一次\n    if (frames.length >= 60) {\n      report({\n        type: MonitorType.Performance,\n        subType: PerformanceType.FPS,\n        frames,\n        isBlocking: calculateBlocking(frames)\n      })\n\n      frames.length = 0\n    }\n  }\n\n  requestAnimationFrame(calculateFrame)\n}\n\n// 连续3帧频率低于 20 则认为是卡顿\nfunction calculateBlocking(frames: FramesType) {\n  let count = 0\n  for (const frame of frames) {\n    count = frame < BLOCKING_FRAME ? count + 1 : 0\n  }\n  return count >= LAST\n}\n","// first-screen-paint 首屏加载时间\n\nimport { report } from '../utils/report'\nimport { MonitorType, PerformanceType } from '../types'\n\ninterface Entry {\n  startTime: number\n  children: Array<Element>\n}\n\nlet observer: MutationObserver\nlet timer: number\nlet entries: Array<Entry> = []\n\nconst viewPortWidth = window.innerWidth\nconst viewPortHeight = window.innerHeight\n\n// 忽略变化的标签\nconst ignoreDOMList = ['STYLE', 'SCRIPT', 'LINK', 'META']\n\nexport function getFirstScreenPaint() {\n  observer = new MutationObserver((mutationRecords) => {\n    checkDomChange()\n    const entry: Entry = {\n      startTime: 0,\n      children: []\n    }\n    for (const record of mutationRecords) {\n      if (record.addedNodes.length) {\n        for (const node of record.addedNodes) {\n          const el = node as Element\n          if (\n            el.nodeType === 1 &&\n            !ignoreDOMList.includes(el.tagName) &&\n            !isIgnoreDOM(el) &&\n            isInScreen(el)\n          ) {\n            entry.children.push(el)\n          }\n        }\n      }\n    }\n\n    if (entry.children.length) {\n      entries.push(entry)\n      entry.startTime = +performance.now().toFixed(1)\n    }\n  })\n  observer.observe(document, {\n    childList: true, // 监听添加或删除子节点\n    subtree: true, // 监听整个子树\n    characterData: true, // 监听元素的文本是否变化\n    attributes: true // 监听元素的属性是否变化\n  })\n}\n\nfunction checkDomChange() {\n  cancelAnimationFrame(timer)\n  timer = requestAnimationFrame(() => {\n    if (document.readyState === 'complete') {\n      observer.disconnect()\n      const t = getRenderTime()\n      report({\n        type: MonitorType.Performance,\n        subType: PerformanceType.FirstScreenPaint,\n        startTime: t\n      })\n      return (entries = null)\n    }\n    checkDomChange()\n  })\n}\n\nfunction getRenderTime() {\n  let startTime = 0\n  entries.forEach((entry) => {\n    if (entry.startTime > startTime) {\n      startTime = entry.startTime\n    }\n  })\n\n  performance.getEntriesByType('resource').forEach((item) => {\n    if (\n      item.initiatorType === 'img' &&\n      item.fetchStart < startTime &&\n      item.responseEnd > startTime\n    ) {\n      startTime = item.responseEnd\n    }\n  })\n\n  return startTime\n}\n\nfunction isInScreen(dom: Element) {\n  const { left, top } = dom.getBoundingClientRect()\n  return left <= viewPortWidth && top <= viewPortHeight\n}\n\nfunction isIgnoreDOM(el: Element) {\n  return window.getComputedStyle(el).display === 'none'\n}\n","// cumulative-layout-shift 累积布局偏移值\n\nimport { report } from '../utils/report'\nimport { MonitorType, PerformanceType } from '../types'\n\nexport function getCLS() {\n  let observer: MutationObserver\n  let clsValue = 0\n  let sessionValue = 0\n  let sessionEntries = []\n\n  const entryHandler = (entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (!entry.hadRecentInput) {\n        const firstSessionEntry = sessionEntries[0]\n        const lastSessionEntry = sessionEntries[sessionEntries.length - 1]\n\n        if (\n          sessionValue &&\n          entry.startTime - lastSessionEntry.startTime < 1000 &&\n          entry.startTime - firstSessionEntry.startTime < 5000\n        ) {\n          sessionValue += entry.value\n          sessionEntries.push(entry)\n        } else {\n          sessionValue = entry.value\n          sessionEntries = [entry]\n        }\n\n        if (sessionValue > clsValue) {\n          clsValue = sessionValue\n          observer.disconnect()\n          report({\n            type: MonitorType.Performance,\n            subType: PerformanceType.CumlativeLayoutShift,\n            startTime: performance.now(),\n            value: sessionValue\n          })\n        }\n      }\n    }\n  }\n\n  observer = new PerformanceObserver(entryHandler)\n  observer.observe({ type: 'layout-shift', buffered: true })\n}\n","// first-input-delay 首次输入延迟\n\nimport { report } from '../utils/report'\nimport { MonitorType, PerformanceType } from '../types'\n\nexport function getFID() {\n  const observer = new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      const e = entry as PerformanceEventTiming\n      observer.disconnect()\n      report({\n        type: MonitorType.Performance,\n        subType: PerformanceType.FirstInputDelay,\n        startTime: +(e.processingStart - e.startTime).toFixed(1)\n      })\n    }\n  })\n  observer.observe({ type: 'first-input', buffered: true })\n}\n","// largest-content-paint 最大内容绘制\n\nimport { report } from '../utils/report'\nimport { MonitorType, PerformanceType } from '../types'\n\nexport function getLCP() {\n  const observer = new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      observer.disconnect()\n      report({\n        type: MonitorType.Performance,\n        subType: PerformanceType.LargestContentfulPaint,\n        startTime: entry.startTime\n      })\n    }\n  })\n\n  observer.observe({\n    type: 'largest-contentful-paint',\n    buffered: true\n  })\n}\n","import type { IBreadCrumb } from '../types'\n\nclass BreadCrumb {\n  private maxBreadcrumbs: number\n  private stack: IBreadCrumb[] = []\n\n  constructor() {\n    this.maxBreadcrumbs = 20\n  }\n\n  public push(data: IBreadCrumb) {\n    if (this.stack.length >= this.maxBreadcrumbs) {\n      this.shift()\n    }\n\n    this.stack.push(data)\n  }\n\n  private shift() {\n    return this.stack.shift() !== undefined\n  }\n\n  public getStack() {\n    return this.stack\n  }\n}\n\nconst breadCrumb = new BreadCrumb()\n\nexport { breadCrumb }\n","import { report } from '../utils/report'\nimport { httpStatusMap } from '../utils'\nimport type { ReportData } from '../types'\nimport {\n  BreadCrumbType,\n  ErrorType,\n  MonitorType,\n  PerformanceType\n} from '../types'\nimport { breadCrumb } from '../behavior/breadcrumb'\nimport defaultConfig from '../config'\n\nconst originalFetch = window.fetch\n\nexport function rewriteFetch() {\n  window.fetch = function newFetch(url, config) {\n    const startTime = Date.now()\n    const reportData: ReportData = {\n      startTime,\n      url,\n      pageUrl: window.location.href,\n      method: (config?.method || 'GET').toUpperCase(),\n      subType: PerformanceType.Fetch,\n      type: MonitorType.Performance\n    }\n    let data\n    return originalFetch(url, config)\n      .then((res) => {\n        data = res.clone()\n        return res\n      })\n      .catch((err) => {\n        reportData.status = -1\n        reportData.success = false\n        reportData.message = err.message\n        reportData.type = MonitorType.Error\n        reportData.subType = ErrorType.Fetch\n        throw err\n      })\n      .finally(() => {\n        reportData.endTime = Date.now()\n        reportData.duration = reportData.endTime - reportData.startTime\n        function finalReport() {\n          if (!defaultConfig.url.includes(reportData.url as string)) {\n            breadCrumb.push({\n              type: MonitorType.Behavior,\n              time: Date.now(),\n              data: reportData,\n              breadCrumbType: BreadCrumbType.HTTP,\n              breadCrumbStatus: reportData.success ? 'success' : 'error'\n            })\n            report({ ...reportData, breadCrumb: breadCrumb.getStack() })\n          }\n        }\n\n        if (data) {\n          return data.json().then((result) => {\n            const message =\n              result.message ||\n              result.msg ||\n              httpStatusMap(result.code || result.status)\n            reportData.status = result.code || result.status\n            reportData.message = message\n            reportData.success = message === 'OK'\n            reportData.type =\n              message === 'OK' ? MonitorType.Performance : MonitorType.Error\n            reportData.subType =\n              message === 'OK' ? PerformanceType.Fetch : ErrorType.Fetch\n            finalReport()\n          })\n        } else {\n          finalReport()\n        }\n      })\n  }\n}\n","import { report } from '../utils/report'\nimport {\n  BreadCrumbType,\n  ErrorType,\n  MonitorType,\n  PerformanceType\n} from '../types'\nimport defaultConfig from '../config'\nimport { httpStatusMap } from '../utils'\nimport { breadCrumb } from '../behavior/breadcrumb'\nconst originalXhrProto = XMLHttpRequest.prototype\nconst originalXhrOpen = originalXhrProto.open\nconst originalXhrSend = originalXhrProto.send\n\nexport function rewriteXhr() {\n  originalXhrProto.open = function (...args) {\n    this.method = args[0]\n    this.url = args[1]\n    originalXhrOpen.apply(this, args)\n  }\n\n  originalXhrProto.send = function (...args) {\n    this.startTime = Date.now()\n\n    const onLoadend = () => {\n      this.endTime = Date.now()\n      this.duration = this.endTime - this.startTime\n      const {\n        statusText,\n        response,\n        duration,\n        startTime,\n        endTime,\n        url,\n        method\n      } = this\n      const result = JSON.parse(response)\n      const status = result.code || result.status\n      const message =\n        result.message || result.msg || httpStatusMap(status) || statusText\n\n      const reportData = {\n        status,\n        duration,\n        startTime,\n        endTime,\n        url,\n        pageUrl: window.location.href,\n        method: (method || 'GET').toUpperCase(),\n        message,\n        success: message === 'OK',\n        subType: message === 'OK' ? PerformanceType.Xhr : ErrorType.Xhr,\n        type: message === 'OK' ? MonitorType.Performance : MonitorType.Error\n      }\n      if (!defaultConfig.url.includes(reportData.url as string)) {\n        breadCrumb.push({\n          type: MonitorType.Behavior,\n          time: Date.now(),\n          data: reportData,\n          breadCrumbType: BreadCrumbType.HTTP,\n          breadCrumbStatus: reportData.success ? 'success' : 'error'\n        })\n        report({ ...reportData, breadCrumb: breadCrumb.getStack() })\n      }\n      this.removeEventListener('loadend', onLoadend, true)\n    }\n\n    this.addEventListener('loadend', onLoadend, true)\n\n    originalXhrSend.apply(this, args)\n  }\n}\n","import { getFCP } from './fcp'\nimport { getFps } from './fps'\nimport { getFirstScreenPaint } from './fsp'\nimport { getCLS } from './cls'\nimport { getFID } from './fid'\nimport { getLCP } from './lcp'\nimport { rewriteFetch } from './fetch'\nimport { rewriteXhr } from './xhr'\n\nexport function performance() {\n  getCLS()\n  getFCP()\n  getFID()\n  getFirstScreenPaint()\n  getFps()\n  getLCP()\n  rewriteFetch()\n  rewriteXhr()\n}\n","import { report } from '../utils/report'\nimport { getUUID } from '../utils'\nimport { BehaviorType, MonitorType } from '../types'\n\nexport function pv() {\n  report({\n    type: MonitorType.Behavior,\n    subType: BehaviorType.pv,\n    startTime: performance.now(),\n    pageUrl: window.location.href,\n    referrer: document.referrer,\n    uuid: getUUID()\n  })\n}\n","import { report } from '../utils/report'\nimport { getUUID } from '../utils'\nimport { BehaviorType, MonitorType } from '../types'\n\nexport function accessDuration() {\n  window.addEventListener('beforeunload', () => {\n    report(\n      {\n        type: MonitorType.Behavior,\n        subType: BehaviorType.accessDuration,\n        startTime: performance.now(),\n        pageURL: window.location.href,\n        uuid: getUUID()\n      },\n      true\n    )\n  })\n}\n","import { BreadCrumbType, MonitorType } from '../types'\nimport config from '../config/index'\nimport { breadCrumb } from './breadcrumb'\n\nfunction htmlElementAsString(target: Element | null) {\n  if (target) {\n    const tagName = target.tagName.toLowerCase()\n    if (tagName === 'body') {\n      return null\n    }\n    if (config.domTracker && target.attributes.tracked !== undefined) {\n      const innerText = target.innerText || ''\n      return `<${tagName}>${innerText}</${tagName}>`\n    }\n  }\n  return null\n}\n\nexport function click() {\n  document.addEventListener('click', function () {\n    const str = htmlElementAsString(this.activeElement)\n    if (!str) {\n      return\n    }\n    breadCrumb.push({\n      type: MonitorType.Behavior,\n      time: Date.now(),\n      data: str,\n      breadCrumbType: BreadCrumbType.Click,\n      breadCrumbStatus: 'info'\n    })\n  })\n}\n","export const createHistoryEvent = <T extends keyof History>(\n  type: T\n): (() => any) => {\n  const origin = history[type]\n\n  return function (this: any, ...args) {\n    const res = origin.apply(this, args)\n    window.dispatchEvent(new Event(type))\n    return res\n  }\n}\n","import { report } from '../utils/report'\nimport { BehaviorType, BreadCrumbType, MonitorType } from '../types'\nimport { createHistoryEvent } from '../utils/pv'\nimport defaultConfig from '../config'\nimport { breadCrumb } from './breadcrumb'\n\nexport function pageChange() {\n  window.history.pushState = createHistoryEvent('pushState')\n  window.history.replaceState = createHistoryEvent('replaceState')\n\n  if (defaultConfig.historyTracker) {\n    let from = window.location.href\n    let fromPathName = window.location.pathname\n    window.addEventListener('pushState', () => {\n      const to = window.location.href\n      const toPathname = window.location.pathname\n      breadCrumb.push({\n        type: MonitorType.Behavior,\n        time: Date.now(),\n        data: [fromPathName, toPathname],\n        breadCrumbType: BreadCrumbType.ROUTE,\n        breadCrumbStatus: 'info'\n      })\n      setTimeout(() => {\n        report({\n          from,\n          to,\n          type: MonitorType.Behavior,\n          subType: BehaviorType.pushState,\n          breadCrumb: breadCrumb.getStack()\n        })\n        from = to\n        fromPathName = toPathname\n      }, 100)\n    })\n  }\n\n  if (defaultConfig.hashTracker) {\n    let oldUrl = ''\n    window.addEventListener('hashchange', (e: HashChangeEvent) => {\n      const newUrl = e.newURL\n      breadCrumb.push({\n        type: MonitorType.Behavior,\n        time: Date.now(),\n        data: [oldUrl, newUrl],\n        breadCrumbType: BreadCrumbType.Click,\n        breadCrumbStatus: 'info'\n      })\n      setTimeout(() => {\n        report({\n          from: oldUrl,\n          to: newUrl,\n          type: MonitorType.Behavior,\n          subType: BehaviorType.hashChange,\n          breadCrumb: breadCrumb.getStack()\n        })\n      }, 100)\n      oldUrl = newUrl\n    })\n  }\n}\n","import { pv } from './pv'\nimport { accessDuration } from './accessDuration'\nimport { click } from './click'\nimport { pageChange } from './pageChange'\n\nexport function behavior() {\n  click()\n  pv()\n  pageChange()\n  accessDuration()\n}\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(,.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').replace(/^.*?\\s+/, '');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\(.+\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                // if a location was matched, pass it to extractLocation() otherwise pass all sanitizedLine\n                // because this line doesn't have function name\n                var locationParts = this.extractLocation(location ? location[1] : sanitizedLine);\n                var functionName = location && sanitizedLine || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","import ErrorStackParser from 'error-stack-parser'\nimport { report } from '../utils/report'\nimport { BreadCrumbType, ErrorType, MonitorType } from '../types'\nimport { interceptStr } from '../utils/index'\nimport { breadCrumb } from '../behavior/breadcrumb'\n\n// 捕捉 js 错误\nexport function vueErrorHandler(e: any) {\n  try {\n    const target = e.target\n    if (!target || (e.target && !e.target.localName)) {\n      const stackFrame = ErrorStackParser.parse(!target ? e : e.error)[0]\n      const { fileName, columnNumber, lineNumber } = stackFrame\n\n      setTimeout(() => {\n        breadCrumb.push({\n          type: MonitorType.Error,\n          time: Date.now(),\n          data: e.message,\n          breadCrumbType: BreadCrumbType.CODEERROR,\n          breadCrumbStatus: 'error'\n        })\n        report({\n          type: MonitorType.Error,\n          subType: ErrorType.Js,\n          startTime: Date.now(),\n          pageUrl: window.location.href,\n          message: e.message,\n          fileName,\n          lineNumber,\n          columnNumber,\n          breadCrumb: breadCrumb.getStack()\n        })\n      })\n    }\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport function error() {\n  //  捕捉请求资源错误\n  window.addEventListener(\n    'error',\n    (e: any) => {\n      const target = e.target\n      if (!target) {\n        return\n      }\n      if (target.src || target.href) {\n        const url = target.src || target.href\n        setTimeout(() => {\n          breadCrumb.push({\n            type: MonitorType.Error,\n            time: Date.now(),\n            data: url,\n            breadCrumbType: BreadCrumbType.RESOURCE,\n            breadCrumbStatus: 'error'\n          })\n          return report({\n            type: MonitorType.Error,\n            subType: ErrorType.Resource,\n            startTime: Date.now(),\n            message: target.outerHTML,\n            resourceType: target.tagName,\n            url,\n            pageUrl: window.location.href,\n            breadCrumb: breadCrumb.getStack()\n          })\n        })\n      }\n    },\n    true\n  )\n\n  // 捕捉 promise 错误\n  window.addEventListener('unhandledrejection', (e) => {\n    const { fileName, columnNumber, lineNumber } = ErrorStackParser.parse(\n      e.reason\n    )[0]\n    setTimeout(() => {\n      breadCrumb.push({\n        type: MonitorType.Error,\n        time: Date.now(),\n        data: interceptStr(e.reason.message, 130),\n        breadCrumbType: BreadCrumbType.CODEERROR,\n        breadCrumbStatus: 'error'\n      })\n      report({\n        type: MonitorType.Error,\n        subType: ErrorType.Promise,\n        message: interceptStr(e.reason.message, 130),\n        startTime: Date.now(),\n        fileName,\n        lineNumber,\n        columnNumber,\n        pageUrl: window.location.href,\n        breadCrumb: breadCrumb.getStack()\n      })\n    })\n  })\n\n  // 捕捉异步错误\n  window.onerror = (msg, url, _, __, error) => {\n    if (error) {\n      const { fileName, columnNumber, lineNumber } =\n        ErrorStackParser.parse(error)[0]\n\n      setTimeout(() => {\n        breadCrumb.push({\n          type: MonitorType.Error,\n          time: Date.now(),\n          data: String(msg),\n          breadCrumbType: BreadCrumbType.CODEERROR,\n          breadCrumbStatus: 'error'\n        })\n\n        report({\n          type: MonitorType.Error,\n          subType: ErrorType.Async,\n          message: interceptStr(msg as string, 130),\n          startTime: Date.now(),\n          lineNumber,\n          fileName,\n          columnNumber,\n          pageUrl: url,\n          breadCrumb: breadCrumb.getStack()\n        })\n      })\n    }\n  }\n}\n","import { performance } from './performance'\nimport { behavior } from './behavior'\nimport { setConfig } from './config/index'\nimport { error, vueErrorHandler } from './error'\nimport type { Options, ViewModel, VueInstance } from './types'\n\nfunction init(options: Options) {\n  // 参数初始化\n  setConfig(options)\n  // 性能监控\n  performance()\n  // 行为监控\n  behavior()\n  // 错误监控\n  error()\n}\n\nexport default {\n  install(Vue: VueInstance, options: Options) {\n    init(options)\n    if (Vue.config) {\n      const handler = Vue.config?.errorHandler\n      Vue.config.errorHandler = function (\n        err: Error,\n        vm: ViewModel,\n        info: string\n      ) {\n        vueErrorHandler(err)\n        if (handler) {\n          handler(err, vm, info)\n        }\n      }\n    }\n  }\n}\n"],"names":["uuidv4","defaultConfig","MonitorType","PerformanceType","ErrorType","BehaviorType","BreadCrumbType","frames","config","performance","this","require$$0","error"],"mappings":"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"}